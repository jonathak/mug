(in-ns 'mug.cli)

(defn sku-case [cmd t]
        (case (-> (str cmd) (str/split #" ") (first))

              ".refresh" (app/refresh t)
                        
              ".u"  (do (swap! *name* (fn [_] @*priorname*)) (@*from*))
              ".q"  (quitt)

              ".doc" (do (browse-url "./doc/mug.pdf") (@*from*))

              ".l"  (do (if (> (count @*fridge*) 0)
                            (println (reduce #(str %1 "\n" %2) (keys @*fridge*)))
                            (println "fridge is empty."))
                        (sku t))

              ".w"  (window cmd)
              ".h"  (let [choice (do (print hlp/s-help-sub) 
                                     (flush)
                                     (read-line))]
                      (case (first choice)
                            \1 (do (print hlp/s-help-sub-quant) (sku t))
                            \2 (do (print hlp/s-help-sub-web) (sku t))
                            \3 (do (print hlp/s-help-sub-find) (sku t))
                            \4 (do (print hlp/s-help-sub-info) (sku t))
                            \5 (do (print hlp/s-help-sub-history) (sku t))
                            \6 (do (print hlp/s-help-sub-nav) (sku t))
                            (sku t)))

              (if (cname (str cmd))
                  (do  (swap! *name* (fn [_] (util/tfmt (str cmd))))
                       (sku @*name*))
                  (if (contains? @*fridge* cmd)
                      (do (swap! *inventory* (fn [_] (get @*fridge* (str cmd))))
                          (swap! *name* (fn [_] (str cmd)))
                          (@*from*))
                      (do (println (case (str cmd)
                      ".verbose"  (do (util/verbose))
                      ".concise"  (do (util/concise))
                       ".mov"     (mov t)
                       ".mvs"     (mvs t)
                       ".mvx"     (mvx t)
                       ".mvd"     (mvd t)
                       ".bw"      (bw t)
                       ".vs"      (vs t)
                       ".tvs"     (tvs t)
                       ".p"       (p t)
                       ".pr"      (prices t)
                       ".pr 15m"  (prices t "15Min?")
                       ".pr 5m"   (prices t "5Min?")
                       ".pr 1m"   (prices t "1Min?")
                       ".fpr"     (fprices t)
                       ".fpr 15m" (fprices t "15Min?")
                       ".fpr 5m"  (fprices t "5Min?")
                       ".fpr 1m"  (fprices t "1Min?")
                       ".cff"     (cffd t)
                       ".mkt"     (mkt t)
                       ".cname"   (cname t)
                       ".i"       (i t)
                       ".web"     (web t)
                       ".oweb"    (oweb t)
                       ".yahoo"   (yahoo t)
                       ".sec"     (sec t)
                       ".desc"    (desc t)
                       ".ceo"     (ceo t)
                       ".ceoweb"  (ceoweb t)
                       ".news"    (news t)
                       ".s"       (s t)
                       ".emp"     (emp t)
                       ".so"      (so t)
                       ".pf"      (pf t)
                       ".v"       (v t)
                       ".b"       (b t)
                       ".c"       (c t)
                       ".d"       (d t)
                       ".r"       (r t)
                       ".g"       (g t)
                       ".e"       (e t)
                       ".d2e"     (d2e t)
                       ".ir"      (ir t)
                       ".db"      (db t)
                       ".sp"      (sp t)
                       ".fo"      (fo t)
                       ".io"      (io t)
                       ".cc"      (cc t)
                       ".zc"      (zipcode t)
                       "")) (when (not (= ".q" (str cmd))) (sku t)) ))) ))
